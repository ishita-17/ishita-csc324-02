theme_set(
theme_bw() +
theme(legend.position = "top")
)
ggplot(db, aes(x = Talent, y = Research)) +
geom_point(aes(color = Region, size = Total.score), alpha = 0.5) +
scale_color_brewer(palette = "Accent") +
scale_size(range = c(0.5, 12))  # Adjust the range of points si
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
docs <- Corpus(VectorSource(db$Country))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
knitr::include_graphics("graphic1_lab1.png")
knitr::include_graphics("graphic2_lab1.png")
?qr_code
code1 <- qr_code("https://www.linkedin.com/in/ishita-sarraf/")
#generate_svg(code1, filename = "lab3_code1.svg")
print(code1)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
#generate_svg(code2, filename= "lab3_code2.svg")
code1 <- qr_code("https://www.linkedin.com/in/ishita-sarraf/")
#generate_svg(code1, filename = "lab3_code1.svg")
plot(code1)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
#generate_svg(code2, filename= "lab3_code2.svg")
code1 <- qr_code("https://www.linkedin.com/in/ishita-sarraf/")
plot(code1)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
plot(code2)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
plot(code2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(magrittr)
library(qrcode)
db <- read.csv("AI_index.csv")
db %$%
cor(Talent, Research)
code1 <- qr_code("https://www.linkedin.com/in/ishita-sarraf/")
plot(code1)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
plot(code2)
ggplot(data = db, aes(x = Talent)) +
geom_histogram(color = "white") +
scale_x_continuous("Talent") +
scale_y_continuous("Frequency") +
theme_bw()
head(db, n = 3)
library(tidyverse)
table4a
table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
ggplot(data = db, aes(x = Research, y = Talent))+
geom_point()
theme_set(
theme_bw() +
theme(legend.position = "top")
)
ggplot(db, aes(x = Talent, y = Research)) +
geom_point(aes(color = Region, size = Total.score), alpha = 0.5) +
scale_color_brewer(palette = "Accent") +
scale_size(range = c(0.5, 12))  # Adjust the range of points si
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
docs <- Corpus(VectorSource(db$Country))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
knitr::include_graphics("graphic1_lab1.png")
knitr::include_graphics("graphic2_lab1.png")
code1 <- qr_code("https://www.linkedin.com/in/ishita-sarraf/")
plot(code1)
code2 <- qr_code("https://github.com/ishita-17/ishita-csc324-02")
plot(code2)
knitr::opts_chunk$set(echo = TRUE)
Love_Money <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Love_Money.csv")
Love_Money <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Love_Money.csv")
View(Love_Money)
library(dplyr)
library(ggplot2)
Love_Money <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Love_Money.csv")
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point()
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth()
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth() +
geom_jitter(width = 0.2)
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point(alpha = 0.4) +
geom_smooth()
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth()
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth() +
geom_jitter(width = 0.3)
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth() +
geom_jitter(width = 0.5)
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth() +
geom_jitter(height = 0.5)
ggplot(data = Love_Money, aes(x = Love, y = MoneySpent)) +
geom_point() +
geom_smooth() +
geom_jitter(width = 0.5)
model <- lm(MoneySpent~Love, data = Love_Money)
summary(model)
par(mfrow = c(2,2))
plot(model)
knitr::opts_chunk$set(echo = TRUE)
Cars <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Cars.csv")
library(ggplot2)
library(dplyr)
Cars <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Cars.csv")
View(Cars)
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point()
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point() +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
ggplot(data = Cars, aes(y = Mileage, x = Price)) +
geom_point() +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point() +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
model <- lm(Price ~ Mileage, data = Cars)
model <- lm(Price ~ Mileage, data = Cars)
summary(model)
par(mfrow = c(2,2))
plot(model)
model_mlm <- lm(Price ~ Cyl + Liter + Doors + Cruise + Sound + Mileage, data = Cars)
summary(model_mlm)
options(scipen = -1.476e+03)
model_mlm <- lm(Price ~ Cyl + Liter + Doors + Cruise + Sound + Mileage, data = Cars)
summary(model_mlm)
model_mlm <- lm(Price ~ Cyl + Liter + Doors + Cruise + Leather + Sound + Mileage, data = Cars)
summary(model_mlm)
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point(color = "orange") +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point(color = "green") +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point(color = "blue") +
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
knitr::opts_chunk$set(echo = TRUE)
us_data <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/projects/USStates.csv")
View(us_data)
us_data <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/projects/USStates.csv")
setwd(/ishi/ishita-csc324-02)
setwd("/ishi/ishita-csc324-02")
setwd("/ishi/ishita-csc324-02/")
setwd("ishita-csc324-02/")
setwd("ishita-csc324-02")
getwd()
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
getwd()
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
View(db)
head(db)
m1 <- lm(Price ~ Mileage + Liter, data = Cars)
summary(m1)
m2 <- lm(Price ~ Mileage + Cyl, data = Cars)
summary(m2)
options(scipen = 1.22e-05)
print(options(scipen = 1.22e-05))
m3 <- lm(Price ~ Mileage + Cyl + Liter, data = Cars)
summary(m3)
ggplot(data = Cars, aes(x = Cyl, y = Liter)) +
geom_point()
ggplot(data = Cars, aes(x = Cyl, y = Liter)) +
geom_point() + geom_smooth()
ggplot(data = Cars, aes(x = Cyl, y = Liter)) +
geom_point() +
labs(x = "Number of Cylinders", y="Liters", title = "Relationship between Cylinders and Liters")
install.packages("Stat2Data")
library(Stat2Data)
library(Stat2Data)
data("MathEnrollment")
View(MathEnrollment)
ggplot(data=MathEnrollment, aes(x=Fall, y=Spring, color=AYear)) +
geom_point()
ggplot(data=MathEnrollment, aes(x=Fall, y=Spring)) +
geom_point() + facet_wrap(~AYear)
# Create a visualization comparing fall and spring enrollment
plot(MathEnrollment$FallEnroll, MathEnrollment$SpringEnroll,
xlab = "Fall Enrollment", ylab = "Spring Enrollment",
main = "Comparison of Fall and Spring Enrollment")
# Create a visualization comparing fall and spring enrollment
plot(MathEnrollment$Fall, MathEnrollment$Spring,
xlab = "Fall Enrollment", ylab = "Spring Enrollment",
main = "Comparison of Fall and Spring Enrollment")
# Identify potential outlier
points(MathEnrollment$Fall[which.max(MathEnrollment$Spring)],
MathEnrollment$Spring[which.max(MathEnrollment$Spring)],
col = "red", pch = 16)
ggplot(MathEnrollment, aes(x = FallEnroll, y = SpringEnroll)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_text(data = MathEnrollment[which.max(MathEnrollment$SpringEnroll), ],
aes(label = "Potential Outlier"), vjust = -1, color = "red")
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
geom_text(data = MathEnrollment[which.max(MathEnrollment$Spring), ],
aes(label = "Potential Outlier"), vjust = -1, color = "red")
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE, color = "blue")
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth()
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE)
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm")
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE)
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm")
ggplot(MathEnrollment, aes(x = Fall, y = Spring)) +
geom_point(color=AYear) +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm")
ggplot(MathEnrollment, aes(x = Fall, y = Spring, color=AYear)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm")
?scale_color_brewer
ggplot(MathEnrollment, aes(x = Fall, y = Spring, color=AYear)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm") +
scale_color_brewer(palette = "Paired")
ggplot(MathEnrollment, aes(x = Fall, y = Spring, color=AYear)) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm") +
scale_color_brewer(palette = "Dark2")
ggplot(MathEnrollment, aes(x = Fall, y = Spring, color=as.factor(AYear))) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm")
m1 <- lm(Spring~Fall, data = MathEnrollment)
summary(m1)
outlier_removed <- MathEnrollment[MathEnrollment$AYear != 2003, ]
View(model_mlm)
View(outlier_removed)
outlier_removed <- MathEnrollment[MathEnrollment$AYear != 2003, ]
m2 <- lm(Spring~Fall, data = outlier_removed)
summary(m2)
par(mfrow = c(2,2))
plot(m2)
outlier_removed <- subset(MathEnrollment, AYear != 2003)
m2 <- lm(Spring~Fall, data = outlier_removed)
summary(m2)
par(mfrow = c(2,2))
plot(m2)
test_result <- summary(model2)$coefficients[2, ]
test_result <- summary(m2)$coefficients[2, ]
p_value_slope <- test_result["Pr(>|t|)"]
p_value_slope
m3 <- lm(Spring ~ Fall + AYear, data = outlier_removed)
summary(m3)
par(mfrow = c(2,2))
plot(m3)
Handwriting <- read.csv("https://grinnell-statistics.github.io/sta-310-s24/data/Handwriting.csv")
View(Handwriting)
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2)) +
geom_point() +
geom_smooth()
m4 <- lm(Survey2 ~ Survey1, data = Handwriting)
summary(m4)
par(mfrow = c(2,2))
plot(m4)
?confint
confint(m4, level = 0.95)
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = Gender)) +
geom_point() +
geom_smooth()
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = Gender)) +
geom_point() +
geom_smooth() +
scale_color_brewer(palette = "PrGn")
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
geom_smooth()
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point()
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
labs(x = "Survey 1", y = "Survey 2", color = "Gender", title = "Scatterplot for Survey 1 and Survey 2 with Gender")
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2)) +
geom_point() +
geom_smooth() +
labs(x = "Survey1", y = "Survey2", title = "Scatterplot for Survey 1 and Survey 2")
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
labs(x = "Survey 1", y = "Survey 2", color = "Gender", title = "Scatterplot for Survey 1 and Survey 2 with Gender") +
geom_smooth()
m5 <- lm(Survey1 ~ Survey1 + Gender, data = Handwriting)
summary(m5)
m5 <- lm(Survey2 ~ Survey1 + Gender, data = Handwriting)
summary(m5)
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point(color = "blue") +
geom_smooth()
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
ggplot(data = Cars, aes(x = Mileage, y = Price)) +
geom_point(color = "orange") +
geom_smooth()
labs(x = "Mileage", y = "Price", title = "Scatterplot for Price and Mileage")
model_mlm <- lm(Price ~ Cyl + Liter + Doors + Cruise + Leather + Sound + Mileage, data = Cars)
summary(model_mlm)
par(mfrow = c(2,2))
plot(m2)
m2$residuals
par(mfrow = c(2,2))
plot(m2)
outlier_removed$Residuals <- m2$residuals
ggplot(data = outlier_removed, aes(x = AYear, y = Residuals)) +
geom_point()
outlier_removed$Residuals <- m2$residuals
ggplot(data = outlier_removed, aes(x = AYear, y = Residuals)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
outlier_removed$Residuals_2 <- m3$residuals
ggplot(data = outlier_removed, aes(x = AYear, y = Residuals_2)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
par(mfrow = c(2,2))
plot(m3)
summary(m3)
m3 <- lm(Spring ~ Fall + AYear, data = outlier_removed)
summary(m3)
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Survey1", y = "Survey2", title = "Scatterplot for Survey 1 and Survey 2")
m4 <- lm(Survey2 ~ Survey1, data = Handwriting)
summary(m4)
par(mfrow = c(2,2))
plot(m4)
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
labs(x = "Survey 1", y = "Survey 2", color = "Gender", title = "Scatterplot for Survey 1 and Survey 2 with Gender") +
geom_smooth()
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
labs(x = "Survey 1", y = "Survey 2", color = "Gender", title = "Scatterplot for Survey 1 and Survey 2 with Gender") +
geom_smooth(method = "lm", se = FALSE)
m5 <- lm(Survey2 ~ Survey1 + Gender, data = Handwriting)
summary(m5)
ggplot(MathEnrollment, aes(x = Fall, y = Spring, color=as.factor(AYear))) +
geom_point() +
labs(x = "Fall Enrollment", y = "Spring Enrollment",
title = "Comparison of Fall and Spring Enrollment") +
geom_smooth(method = "lm", se = FALSE)
confint(m4, level = 0.95)
confint(m4, Survey1, level = 0.95)
m4 <- lm(Survey2 ~ Survey1, data = Handwriting)
summary(m4)
confint(m4, Survey1, level = 0.95)
confint(m4, "Survey1", level = 0.95)
ggplot(data = Handwriting, aes(x = Survey1, y = Survey2, color = as.factor(Gender))) +
geom_point() +
labs(x = "Survey 1", y = "Survey 2", color = "Gender", title = "Scatterplot for Survey 1 and Survey 2 with Gender")
library(shinythemes)
install.packages("shinythemes")
library(shinythemes)
library(shiny); runApp('csc324-labs/Lab4-WordCloud.R')
runApp('csc324-labs/Lab4-Histogram.R')
getwd()
setwd("ishita-csc324-02")
runApp('~/csc324-labs/Lab4-Histogram.R')
# getwd()
# setwd("ishita-csc324-02")
df <- read.csv("AI_index_db.csv")
runApp('~/csc324-labs/Lab4-Histogram.R')
runApp('~/csc324-labs/Lab4-Histogram.R')
getwd()
runApp('~/csc324-labs/Lab4-Histogram.R')
runApp('~/csc324-labs/Lab4-Histogram.R')
getwd()
#setwd("ishita-csc324-02")
df <- read.csv("AI_index_db.csv")
runApp('~/csc324-labs/Lab4-Histogram.R')
runApp('~/csc324-labs/Lab4-Histogram.R')
runApp('~/csc324-labs/Lab4-WordCloud.R')
runApp('~/csc324-labs/Lab4-WordCloud.R')
runApp('~/csc324-labs/Lab4-WordCloud.R')
knitr::opts_chunk$set(echo = TRUE)
x <- c(9,3,21,45)
x %in% 9
x <- c(9,3,21,45)
4 %in% x
x <- c(9,3,21,45)
4 %in% x
df <- read.csv("https://github.com/ishita-17/ishita-csc324-02/blob/main/AI_index_db.csv")
View(df)
View(db)
getwd()
getwd()
setwd("/Users/ishi/ishita-csc324-02")
getwd()
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
View(db)
getwd()
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
"Canada" %in% db
getwd()
setwd("/Users/ishi/ishita-csc324-02")
db <- read.csv("AI_index_db.csv")
"Canada" %in% db$Country
"Name" %in% db
"Canada" %in% db$Country
paste("Today is Feb", 19)
paste0("Today is Feb", 19, sep="-")
paste("Today is Feb", 19)
paste0("Today is Feb", 19, sep="-")
paste("This is", 1, "out of", 4, "examples.",sep="-") # seperator operator present
paste("Today is Feb", 19)
paste0("Today is", 19, "Feb." sep="-")
paste("Today is Feb", 19)
paste0("Today is", 19, "Feb.", sep="-")
paste("This is", 1, "out of", 4, "examples.",sep="-") # seperator operator present
paste("Today is Feb", 19)
paste0("Today is", 19, "Feb.", sep="-")
paste("Today is", 19, "Feb.",sep="-") # seperator operator present
paste("Today is Feb", 19, sep = "-")
paste0("Today is Feb", 19)
paste("Today is Feb", 19, 2024, sep = "-")
paste0("Today is Feb", 19)
paste("Today is Feb", 19, 2024, sep = "-")
paste0("Today is Feb ", 19)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(Stat2Data)
library(dplyr)
data("Pollster08")
Pollster08 <- Pollster08 %>% mutate(Charlie = as.factor(Charlie), Meltdown = as.factor(Meltdown))
library(ggplot2)
library(dplyr)
library(Stat2Data)
library(dplyr)
data("Pollster08")
Pollster08 <- Pollster08 %>% mutate(Charlie = as.factor(Charlie), Meltdown = as.factor(Meltdown))
m1 <- lm(Margin ~ poly(Days, degree = 2, raw = T), data = Pollster08)
summary(m1)
